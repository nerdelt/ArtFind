@page
@model artfind.Pages.ArtPiece.IndexModel

@{
    ViewData["Title"] = "Index";
}

<h2>Gallery/Objects</h2>

<p>
    <a asp-page="Create">Create New</a>
</p>

<form asp-page="./Index" method="get">
    <div class="form-actions no-color">
        <p>
            <input type="text" name="SearchString" value="@Model.CurrentFilter" />
            <input type="submit" value="Search" class="btn btn-default" /> |
            <a asp-page="./Index">Back to full List</a>
        </p>
    </div>
</form>

<table class="table">
    <thead>
        <tr>
            <th>
                <a asp-page="./Index" asp-route-sortOrder="@Model.TitleSort">@Html.DisplayNameFor(model => model.ArtPiece[0].Title)
                </a>
            </th>
            <th>
                <a asp-page="./Index" asp-route-sortOrder="@Model.ArtistSort">@Html.DisplayNameFor(model => model.ArtPiece[0].Artist)
                </a>
            </th>
            <th>
                <a asp-page="./Index" asp-route-sortOrder="@Model.DateSort">@Html.DisplayNameFor(model => model.ArtPiece[0].YearCreated)
                </a>
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ArtPiece[0].Medium)
            </th>
            <th>
                <a asp-page="./Index" asp-route-sortOrder="@Model.LocationSort" > @Html.DisplayNameFor(model => model.ArtPiece[0].CurrentLocation)
                </a>
            </th>
            <th>
                <a asp-page="./Index" asp-route-sortOrder="@Model.DimSort" >
                    @Html.DisplayNameFor(model => model.ArtPiece[0].Dimensions)
                </a>
             </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model.ArtPiece) {
        <tr>
            <td>
                <a asp-page="./Details" asp-route-id="@item.ArtPieceID">@Html.DisplayFor(modelItem => item.Title)</a>
            </td>
            <td>
                <a asp-page="../Artists/Details" asp-route-id="@item.Artist.ID">@Html.DisplayFor(modelItem => item.Artist.FullName)</a>
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.YearCreated)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Medium)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.CurrentLocation)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Dimensions)
            </td>
            <td>
                <a asp-page="./Edit" asp-route-id="@item.ArtPieceID">Edit</a> |
                <!--<a asp-page="./Details" asp-route-id="@item.ArtPieceID">Details</a> |-->
                <a asp-page="./Delete" asp-route-id="@item.ArtPieceID">Delete</a>
            </td>
        </tr>
}
    </tbody>
</table>

@{
    //var prevDisabled = !Model.ArtPiece.HasPreviousPage ? "disabled" : "";
    //var nextDisabled = !Model.ArtPiece.HasNextPage ? "disabled" : "";
}
    
<!--@{ /*<a asp-page="./Index"
   asp-route-sortOrder="@Model.CurrentSort"
   asp-route-pageIndex="@(Model.ArtPiece.PageIndex - 1)"
   asp-route-currentFilter="@Model.CurrentFilter"
   class="btn btn-default @prevDisabled">
    Previous
</a>
<a asp-page="./Index"
   asp-route-sortOrder="@Model.CurrentSort"
   asp-route-pageIndex="@(Model.ArtPiece.PageIndex + 1)"
   asp-route-currentFilter="@Model.CurrentFilter"
   class="btn btn-default @nextDisabled">
    Next
</a>
        */}-->

